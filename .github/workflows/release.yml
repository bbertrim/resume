name: Release

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    outputs:
      version: ${{ steps.compile_variables.outputs.version }}
      release_name: ${{ steps.compile_variables.outputs.release_name }}

    steps:
      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Compile Variables
        id: compile_variables
        run: |
          echo "::set-output name=version::$(cat version.txt)"
          echo "::set-output name=release_name::$(cat release.txt)"

      - name: Build
        run: |
          npm install
          npm run build
          npx gulp

      - name: Cache Artifact
        uses: actions/upload-artifact@v2
        with:
          name: index.html
          path: build/index.html

  generate-pdf:
    name: Generate PDF
    needs: build
    runs-on: ubuntu-20.04

    outputs:
      version: ${{ steps.compile_variables.outputs.version }}
      release_name: ${{ steps.compile_variables.outputs.release_name }}

    steps:
      - name: Get Chromium
        uses: browser-actions/setup-chrome@latest

      - name: Fetch Cached Release Artifact
        uses: actions/download-artifact@v2
        with:
          name: index.html

      - name: Generate PDF
        run: |
          google-chrome --headless --disable-gpu --print-to-pdf=resume.pdf index.html

      - name: Cache Artifact
        uses: actions/upload-artifact@v2
        with:
          name: resume.pdf
          path: resume.pdf

  create_release:
    name: Create Release
    needs: build
    runs-on: ubuntu-20.04

    outputs:
      upload_url: ${{ steps.output_upload_url.outputs.upload_url }}

    steps:
      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Craft Release
        id: craft_release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: ${{ needs.build.outputs.release_name }}
          tag_name: ${{ needs.build.outputs.version }}
          body_path: ./CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Output Upload URL
        id: output_upload_url
        run: echo "::set-output name=upload_url::${{ steps.craft_release.outputs.upload_url }}"

  upload-artifact-html:
    name: Add Build Artifact to Release
    needs: create_release
    runs-on: ubuntu-20.04

    steps:
    - name: Fetch Cached Release Artifact
      uses: actions/download-artifact@v2
      with:
        name: index.html

    - name: Upload Cached Release Artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./index.html
        asset_name: resume.html
        asset_content_type: text/html
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-artifact-pdf:
    name: Add Build Artifact to Release
    needs: ['create_release', 'generate-pdf']
    runs-on: ubuntu-20.04

    steps:
    - name: Fetch Cached Release Artifact
      uses: actions/download-artifact@v2
      with:
        name: resume.pdf

    - name: Upload Cached Release Artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./resume.pdf
        asset_name: resume.pdf
        asset_content_type: application/pdf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-github-pages:
    name: Update Github Pages
    needs:
      - build
      - create_release
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout Github Pages Branch
      uses: actions/checkout@v2
      with:
        ref: refs/heads/gh-pages

    - name: Fetch Cached Release Artifact
      uses: actions/download-artifact@v2
      with:
        name: index.html

    - name: Push build to Github Pages branch
      continue-on-error: true   # If no content gets updated this step will fail. We don't want this step to fail the job if that's the case
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add index.html
        git commit -m "Automated Update Github Pages for tag version ${{ needs.build.outputs.version }}" -m "Release Name: ${{ needs.build.outputs.release_name }}"
        git push
